{"version":3,"sources":["main.js"],"names":["app","PIXI","Application","view","document","getElementById","width","height","rgb","filters","RGBSplitFilter","x","y","manifest","loadAssets","loader","add","load","onAssetsLoaded","resources","setupScrollProgress","setupTextDecompose","ticker","e","update","start","Graphics","beginFill","drawCircle","stage","addChild","end","scrollProgress","drawRect","style","TextStyle","fill","fontFamily","fontSize","fontWeight","letters","Text","i","length","letter","startPt","endPt","Math","random","html","scrollingElement","percentScrolled","scrollTop","scrollHeight","offsetHeight","scale","set","red","lerp","t","window","onload"],"mappings":"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","file":"main.js","sourcesContent":["let app = new PIXI.Application({\n\tview: document.getElementById(\"backgroundCanvas\"),\n\twidth: 1280,\n\theight: 720\n});\n\nlet rgb = new PIXI.filters.RGBSplitFilter({x: 0, y: 0}, {x: 0, y: 0}, {x: 0, y: 0});\n\nlet manifest = [\n\t{\"key\" : \"ball\", \"url\" : \"dist/img/logo.png\"},\n\t{\"key\" : \"buildings\", \"url\" : \"dist/img/pierre-chatel-innocenti-1286583-unsplash.jpg\"}\n];\n\nfunction loadAssets() {\n\tapp.loader.add(manifest);\n\n\tapp.loader.load(onAssetsLoaded);\n}\n\nfunction onAssetsLoaded(loader, resources) {\n\n\tsetupScrollProgress();\n\n\tsetupTextDecompose();\n\n\tapp.ticker.add((e) => update(e));\n}\n\nfunction setupScrollProgress() {\n\t// draw range circles\n\tlet start = new PIXI.Graphics();\n\tstart.beginFill(0xffffff);\n\tstart.drawCircle(0, 0, 4);\n\tstart.x = 50;\n\tstart.y = 100;\n\tapp.stage.addChild(start);\n\n\tlet end = new PIXI.Graphics();\n\tend.beginFill(0xffffff);\n\tend.drawCircle(0, 0, 4);\n\tend.x = 50;\n\tend.y = 500;\n\tapp.stage.addChild(end);\n\n\t// draw progress bar\n\tapp.scrollProgress = new PIXI.Graphics();\n\tapp.scrollProgress.beginFill(0xffffff);\n\tapp.scrollProgress.drawRect(-2, 0, 4, 400);\n\n\tapp.scrollProgress.x = 50;\n\tapp.scrollProgress.y = 100;\n\n\tapp.stage.addChild(app.scrollProgress);\n}\n\nfunction setupTextDecompose() {\n\tconst style = new PIXI.TextStyle({\n\t    fill: \"white\",\n\t    fontFamily: \"Helvetica\",\n\t    fontSize: 100,\n\t    fontWeight: \"bold\"\n\t});\n\n\tapp.letters = [\n\t\tnew PIXI.Text('D', style),\n\t\tnew PIXI.Text('E', style),\n\t\tnew PIXI.Text('M', style),\n\t\tnew PIXI.Text('O', style)\n\t];\n\t\n\tfor (let i = 0; i < app.letters.length; i++) {\n\t\tlet letter = app.letters[i];\n\n\t\tletter.y = 100;\n\t\tletter.x = 800 + (i * 100);\n\t\tletter.startPt = {\n\t\t\tx: letter.x, \n\t\t\ty: 100\n\t\t};\n\t\tletter.endPt = {\n\t\t\tx: letter.x - (Math.random() * 500), \n\t\t\ty: 100 + (Math.random() * 500)\n\t\t};\n\t\tletter.filters = [rgb];\n\n\t\tapp.stage.addChild(letter);\n\t}\n}\n\nfunction update(e) {\n\tlet html = document.scrollingElement;\n\tlet percentScrolled = html.scrollTop / (html.scrollHeight - html.offsetHeight);\n\n\t// console.log(percentScrolled);\n\n\tapp.scrollProgress.scale.set(1, percentScrolled);\n\n\t// change filter amt based on scroll\n\trgb.red = {x: 20 * percentScrolled, y: 10 * percentScrolled};\n\n\t// lerp position\n\tfor (let i = 0; i < app.letters.length; i++) {\n\t\tlet letter = app.letters[i];\n\n\t\tletter.x = lerp(letter.startPt.x, letter.endPt.x, percentScrolled);\n\t\tletter.y = lerp(letter.startPt.y, letter.endPt.y, percentScrolled);\n\t}\n}\n\nfunction lerp(start, end, t) {\n\treturn (1 - t) * start + t * end;\n}\n\nwindow.onload = function() {\n\n\tloadAssets();\n}"]}