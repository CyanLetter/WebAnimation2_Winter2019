{"version":3,"sources":["main.js"],"names":["canvas","document","getElementById","ctx","getContext","dotData","x","y","vX","vY","particles","distanceLimit","drawDot","fillStyle","beginPath","arc","fill","updateDot","generateParticles","count","i","newParticle","Math","floor","random","push","updateParticles","length","p","checkBoundaries","drawParticle","connectToOtherParticles","particle","currentParticle","dist","distance","alpha","strokeStyle","moveTo","lineTo","stroke","a","b","dX","dY","sqrt","update","e","fillRect","requestAnimationFrame","window","onload"],"mappings":"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","file":"main.js","sourcesContent":["const canvas = document.getElementById(\"drawingCanvas\");\nconst ctx = canvas.getContext(\"2d\");\n// for single dot\nlet dotData = {\n\tx: 0,\n\ty: 300,\n\tvX: 5,\n\tvY: 3\n};\n\n// for particle system\nlet particles = [];\nlet distanceLimit = 100;\n\nfunction drawDot() {\n\tctx.fillStyle = \"#0000ff\";\n\tctx.beginPath();\n\tctx.arc(dotData.x, dotData.y, 5, 0, 6.28);\n\tctx.fill();\n}\n\nfunction updateDot() {\n\tdrawDot();\n\n\tdotData.x += dotData.vX;\n\tdotData.y += dotData.vY;\n\n\t// handle x velocity\n\tif (dotData.x > 800 && dotData.vX > 0) {\n\t\t// moving right, offscreen\n\t\tdotData.vX *= -1;\n\t} else if (dotData.x < 0 && dotData.vX < 0) {\n\t\t// moving left, offscreen\n\t\tdotData.vX *= -1;\n\t}\n\n\t// handle y velocity\n\tif (dotData.y > 600 && dotData.vY > 0) {\n\t\t// moving down, offscreen\n\t\tdotData.vY *= -1;\n\t} else if (dotData.y < 0 && dotData.vY < 0) {\n\t\t// moving up, offscreen\n\t\tdotData.vY *= -1;\n\t}\n}\n\nfunction generateParticles(count) {\n\t// create a bunch of particle data\n\tfor (let i = 0; i < count; i++) {\n\t\tlet newParticle = {\n\t\t\tx: Math.floor(Math.random() * 800),\n\t\t\ty: Math.floor(Math.random() * 600),\n\t\t\tvX: Math.floor(Math.random() * 4) - 2,\n\t\t\tvY: Math.floor(Math.random() * 4) - 2\n\t\t}\n\t\tparticles.push(newParticle);\n\t}\n}\n\nfunction updateParticles() {\n\tfor (let i = 0; i < particles.length; i++) {\n\t\tlet p = particles[i];\n\t\tp.x += p.vX;\n\t\tp.y += p.vY;\n\t\tcheckBoundaries(p);\n\t\tdrawParticle(p.x, p.y);\n\t\tconnectToOtherParticles(p);\n\t}\n}\n\nfunction checkBoundaries(particle) {\n\t// handle x velocity\n\tif (particle.x > 800 && particle.vX > 0) {\n\t\t// moving right, offscreen\n\t\tparticle.vX *= -1;\n\t} else if (particle.x < 0 && particle.vX < 0) {\n\t\t// moving left, offscreen\n\t\tparticle.vX *= -1;\n\t}\n\n\t// handle y velocity\n\tif (particle.y > 600 && particle.vY > 0) {\n\t\t// moving down, offscreen\n\t\tparticle.vY *= -1;\n\t} else if (particle.y < 0 && particle.vY < 0) {\n\t\t// moving up, offscreen\n\t\tparticle.vY *= -1;\n\t}\n}\n\nfunction drawParticle(x, y) {\n\t// black particles\n\tctx.fillStyle = \"#000000\";\n\n\t// semi-transparent\n\t// ctx.fillStyle = \"rgba(255, 0, 255, 0.2)\";\n\n\t// experiment with composite operations\n\t// ctx.globalCompositeOperation = \"difference\";\n\t// ctx.fillStyle = \"rgba(255, 255, 255, 1)\";\n\t\n\tctx.beginPath();\n\t// dots\n\tctx.arc(x, y, 3, 0, 6.28);\n\t// big circles\n\t// ctx.arc(x, y, 50, 0, 6.28);\n\tctx.fill();\n}\n\nfunction connectToOtherParticles(currentParticle) {\n\t// this is hugely inefficient to run for all particles every time\n\t// we are doing it this way for simplicity\n\tfor (let i = 0; i < particles.length; i++) {\n\t\tlet p = particles[i];\n\t\tif (p === currentParticle) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet dist = distance(currentParticle, p);\n\t\tif (dist > distanceLimit) {\n\t\t\t// don't connect to particles that are too far away\n\t\t\tcontinue;\n\t\t}\n\n\t\t// for basic solid lines\n\t\t// ctx.strokeStyle = \"rgba(0, 0, 0, 0.1)\";\n\n\t\t// calculate alpha based on distance\n\t\tlet alpha = 0.5 * (1 - (dist / distanceLimit));\n\t\t// black line with alpha\n\t\t// ctx.strokeStyle = \"rgba(0, 0, 0, \" + alpha + \")\";\n\t\t// randomized color line with alpha\n\t\tctx.strokeStyle = \"rgba(\" + (i * 2) + \", 0, \" + (255 - (i * 2)) + \", \" + alpha + \")\";\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(currentParticle.x, currentParticle.y);\n\t\tctx.lineTo(p.x, p.y);\n\t\tctx.stroke();\n\t}\n}\n\nfunction distance(a, b) {\n\tvar dX = a.x - b.x;\n\tvar dY = a.y - b.y;\n\n\treturn Math.sqrt( dX*dX + dY*dY );\n}\n\nfunction update(e) {\n\t// clear every frame\n\t// ctx.clearRect(0, 0, 800, 600);\n\n\t// fade out and make a trail behind moving objects\n\tctx.fillStyle = \"rgba(255, 255, 255, 0.2)\";\n\tctx.fillRect(0, 0, 800, 600);\n\n\t// bounce dot around screen\n\t// updateDot();\n\n\t// loop through all particles, change positions and draw\n\tupdateParticles();\n\t\n\t// loop indefinitely\n\trequestAnimationFrame(update);\n}\n\nwindow.onload = function(){\n\t// generateParticles(5000);\n\n\tgenerateParticles(100);\n\n\t// start update loop\n\trequestAnimationFrame(update);\n}\n\n"]}